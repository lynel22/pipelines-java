# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  name: Default
  demands:
    - agent.name -equals azp-agent

variables:
  buildDir: '$(System.DefaultWorkingDirectory)\target'

stages:
- stage: Build
  displayName: "Build Stage"
  jobs:
  - job: Build
    displayName: "Build Job"
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        goals: 'clean compile package'

    - script: |
        echo "Contents of $(buildDir):"
        dir $(buildDir)
      displayName: "List Build Directory"

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(buildDir)'
        artifact: 'build-output'
      displayName: "Publish Build Output"

- stage: Test
  displayName: "Test Stage"
  dependsOn: Build
  jobs:
  - job: Test
    displayName: "Test Job"
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: 'build-output'
        path: '$(buildDir)'
      displayName: "Download Build Output"
      
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**\surefire-reports\TEST-*.xml'
        goals: 'test'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(buildDir)'
        artifact: 'test-output'
        publishLocation: 'pipeline'
      displayName: "Publish Test Output"

- stage: Deliver
  displayName: "Deliver Stage"
  dependsOn: Test
  jobs:
  - job: Deliver
    displayName: "Deliver Job"
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: 'test-output'
        path: '$(buildDir)'
      displayName: "Download Test Output"
      
    - script: |
        echo "Debug: Checking $(buildDir)"
        if not exist "$(buildDir)\deliverables" mkdir "$(buildDir)\deliverables"
        if not exist "$(buildDir)\*.war" (
          echo "No WAR files found in $(buildDir)"
        ) else (
          echo "Copying WAR files to deliverables"
          for %%f in ("$(buildDir)\*.war") do copy "%%f" "$(buildDir)\deliverables\"
        )
        if not exist "$(buildDir)\surefire-reports\*" (
          echo "No test result files found"
        ) else (
          echo "Copying test result files to deliverables"
          xcopy /S /Y "$(buildDir)\surefire-reports" "$(buildDir)\deliverables\"
        )
        dir "$(buildDir)"
      displayName: "Prepare Deliverables with Validation"     
      
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(buildDir)\deliverables'
        artifact: 'java-app'
        publishLocation: 'pipeline'
      displayName: "Publish Final Output"   
